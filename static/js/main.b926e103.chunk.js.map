{"version":3,"sources":["components/Banner/Banner.module.css","components/NavBar/NavBar.module.css","utils/API.js","components/Banner/Banner.js","components/StyledComponents/Button/Button.js","components/MovieDetail/MovieDetail.js","components/StyledComponents/MovieSection/MovieSection.js","components/StyledComponents/MovieSlider/MovieSlider.js","components/MovieSliderItem/MovieSliderItemPoster.js","components/MovieSliderItem/MovieSliderItemBackdrop.js","components/MovieList/MovieList.js","components/NavBar/NavBar.js","hooks/useScroll.js","pages/browse/Browse.jsx","components/SearchForm/SearchForm.js","components/SearchResult/ResultList.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_KEY","API_PREFIX","RESQUEST","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","RESQUESTPOSTER","title","apiUrl","RESQUESTBACKDROP","Banner","props","useState","id","backdrop_path","name","overview","bannerMovie","setBannerMovie","useEffect","Axios","url","method","then","res","randomNumber","Math","floor","random","data","results","length","poster_path","catch","error","console","log","styles","banner","className","overlay","banner_image","alt","src","banner_box","banner_heading","banner_btn","banner_content","CloseButton","styled","button","opts","height","width","playerVars","autoplay","MovieDetail","MovieDetailSection","movieDetail","isShow","first_air_date","vote_average","toFixed","idMovie","videoId","onClick","closeModal","section","MovieSection","div","MovieSlider","imgSize","poster","movieData","MovieSliderItemPoster","movieState","setMovieState","map","movie","index","getMovieData","key","MovieSliderItemBackdrop","MovieList","setMovieData","setMovieDetail","callApiDetailMovie","prevState","movieFilter","filter","site","toUpperCase","type","findIndex","release_date","MovieListSection","NavBar","scrollY","setScrollY","handleScrollY","window","document","documentElement","scrollTop","addEventListener","removeEventListener","useScroll","style","backgroundColor","navbar","navbar_logo","href","navbar_search","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","Browse","SearchForm","inputRef","useRef","SearchSection","ref","placeholder","e","preventDefault","current","value","trim","getSearchKeyWord","alert","ResultList","ResultSection","searchData","renderMovieList","Search","setSearchData","App","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b926e103.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__2x--p\",\"overlay\":\"Banner_overlay__2eUiJ\",\"banner_image\":\"Banner_banner_image__2_Yc6\",\"banner_box\":\"Banner_banner_box__1oT3z\",\"banner_heading\":\"Banner_banner_heading__25BfB\",\"banner_btn\":\"Banner_banner_btn__3_tE5\",\"banner_content\":\"Banner_banner_content__2rmAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3bwKt\",\"navbar_logo\":\"NavBar_navbar_logo__2ubhn\",\"navbar_search\":\"NavBar_navbar_search__1nnKw\"};","export const API_KEY = \"9e9dc25750a744f9e8dd1e267fb1dc94\";\r\nexport const API_PREFIX = \"https://api.themoviedb.org/3\";\r\nexport const LINK_IMG_PREFIX = \"https://image.tmdb.org/t/p/original\";\r\n\r\nexport const RESQUEST = {\r\n  fetchTrending: `${API_PREFIX}/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `${API_PREFIX}/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  fetchTopRated: `${API_PREFIX}/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport const RESQUESTPOSTER = [\r\n  {\r\n    title: \"Original\",\r\n    apiUrl: `${API_PREFIX}/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  },\r\n];\r\n\r\nexport const RESQUESTBACKDROP = [\r\n  {\r\n    title: \"Xu Hướng\",\r\n    apiUrl: `${API_PREFIX}/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  },\r\n  {\r\n    title: \"Xếp Hạng Cao\",\r\n    apiUrl: `${API_PREFIX}/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  },\r\n  {\r\n    title: \"Hành Động\",\r\n    apiUrl: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  },\r\n  {\r\n    title: \"Hài\",\r\n    apiUrl: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  },\r\n  {\r\n    title: \"Kinh Dị\",\r\n    apiUrl: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  },\r\n  {\r\n    title: \"Lãng mạn\",\r\n    apiUrl: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  },\r\n  {\r\n    title: \"Tài Liệu\",\r\n    apiUrl: `${API_PREFIX}/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  },\r\n];\r\n","import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Banner.module.css\";\r\nimport { RESQUEST } from \"../../utils/API\";\r\n\r\nexport default function Banner(props) {\r\n  const [bannerMovie, setBannerMovie] = useState({\r\n    id: \"\",\r\n    backdrop_path: \"\",\r\n    name: \"\",\r\n    overview: \"\",\r\n  });\r\n\r\n  // Hàm call API\r\n  const fetchNetflixOriginals = () => {\r\n    const promise = Axios({\r\n      url: RESQUEST.fetchNetflixOriginals,\r\n      method: \"GET\",\r\n    });\r\n    promise\r\n      .then((res) => {\r\n        // const randomNumber = 20;\r\n        // console.log(\"res.data.results[\", res.data.results[randomNumber]);\r\n\r\n        const randomNumber = Math.floor(\r\n          Math.random() * res.data.results.length - 1\r\n        );\r\n        setBannerMovie({\r\n          id: res.data.results[randomNumber].id,\r\n          backdrop_path:\r\n            res.data.results[randomNumber].backdrop_path ||\r\n            res.data.results[randomNumber].poster_path,\r\n          name: res.data.results[randomNumber].name,\r\n          overview:\r\n            res.data.results[randomNumber].overview ||\r\n            \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Nobis atque omnis sint nisi? Facere omnis consequuntur culpa ab accusantium maiores at quidem et sapiente tempora autem,\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Chạy Hàm call api 1 lần duy nhất\r\n    fetchNetflixOriginals();\r\n  }, []);\r\n\r\n  return (\r\n    <section id={styles.banner}>\r\n      <div className={styles.overlay}></div>\r\n      <div className={styles.banner_image}>\r\n        <img\r\n          alt={bannerMovie.name}\r\n          src={`https://image.tmdb.org/t/p/original${bannerMovie.backdrop_path}`}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.banner_box}>\r\n        <h1 className={styles.banner_heading}>{bannerMovie.name}</h1>\r\n        <div className={styles.banner_btn}>\r\n          <button>Play</button>\r\n          <button>My List</button>\r\n        </div>\r\n        <div className={styles.banner_content}>\r\n          <p>{bannerMovie.overview}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  background-color: #3f3f3f;\r\n  border: none;\r\n  color: #959595;\r\n  height: 36px;\r\n  width: 36px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: block;\r\n  font-size: 24px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  transform: scale(1);\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    color: #fff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport YouTube from \"react-youtube\";\r\nimport { CloseButton } from \"../StyledComponents/Button/Button\";\r\n\r\nconst opts = {\r\n  height: \"350px\",\r\n  width: \"100%\",\r\n  playerVars: {\r\n    autoplay: 0,\r\n  },\r\n};\r\n\r\nexport default function MovieDetail(props) {\r\n  return (\r\n    <MovieDetailSection className={props.movieDetail.isShow ? \"\" : \"hidden\"}>\r\n      <div className=\"content\">\r\n        <h1 className=\"content_title\">{props.movieDetail.name || \"\"}</h1>\r\n        <hr />\r\n        <h3 className=\"content_release\">\r\n          Release Date : {props.movieDetail.first_air_date || \"\"}\r\n        </h3>\r\n        <h3 className=\"content_voted\">\r\n          Vote :{\" \"}\r\n          {props.movieDetail.vote_average\r\n            ? props.movieDetail.vote_average.toFixed(1)\r\n            : props.movieDetail.vote_average}\r\n          /10\r\n        </h3>\r\n        <p className=\"content_description\">\r\n          {props.movieDetail.overview ||\r\n            \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Nobis atque omnis sint nisi? Facere omnis consequuntur culpa ab accusantium maiores at quidem et sapiente tempora autem\"}\r\n        </p>\r\n      </div>\r\n      <div className=\"video\">\r\n        {props.movieDetail.idMovie ? (\r\n          <YouTube videoId={props.movieDetail.idMovie || \"\"} opts={opts} />\r\n        ) : (\r\n          <img\r\n            alt={props.movieDetail.name}\r\n            src={\r\n              !props.movieDetail.backdrop_path\r\n                ? \"\"\r\n                : `https://image.tmdb.org/t/p/w500/${props.movieDetail.backdrop_path}`\r\n            }\r\n          ></img>\r\n        )}\r\n      </div>\r\n      <CloseButton onClick={props.closeModal}>X</CloseButton>\r\n    </MovieDetailSection>\r\n  );\r\n}\r\n\r\nconst MovieDetailSection = styled.section`\r\n  position: fixed;\r\n  bottom: 12px;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #212121;\r\n  color: #fff;\r\n  display: flex;\r\n  gap: 16px;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 52px 44px 20px;\r\n  margin: 0 60px;\r\n  z-index: 200;\r\n\r\n  .content {\r\n    flex-basis: 45%;\r\n    padding: 12px 0 0 0;\r\n    .content_title {\r\n      margin-bottom: 16px;\r\n      font-size: 30px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    hr {\r\n      height: 4px;\r\n      background-color: #aeaeae;\r\n      border: none;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .content_release,\r\n    .content_voted {\r\n      font-size: 20px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .content_voted {\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .content_description {\r\n      font-size: 16px;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  .video {\r\n    flex-basis: 50%;\r\n\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieSection = styled.div`\r\n  color: #fff;\r\n  padding: 20px 20px 0 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  .movie_list_heading {\r\n    font-size: 18px;\r\n    user-select: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieSlider = styled.div`\r\n  display: grid;\r\n  gap: 12px;\r\n  grid-template-columns: ${(props) => {\r\n    const imgSize = props.poster ? \"250px\" : \"150px\";\r\n    return `repeat(${props.movieData.length}, ${imgSize})`;\r\n  }};\r\n  height: ${(props) => (props.poster ? \"180px\" : \"275px\")};\r\n  padding: 24px 20px 16px;\r\n  overflow-y: auto;\r\n  overflow-x: auto;\r\n  scroll-behavior: smooth;\r\n  transition: all 0.3s linear;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 12px;\r\n    background-color: #f5f5f5;\r\n    height: 4px;\r\n    border-radius: 100px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    border-radius: 100px;\r\n    background-color: #b2b2b2;\r\n    cursor: pointer;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 100px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #555;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:hover .movie_item {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .movie_item {\r\n    transform: scale(1);\r\n    transition: all 0.3s linear;\r\n    max-width: 400px;\r\n    max-height: 500px;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transform: scale(1.1);\r\n      z-index: 2;\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { MovieSection } from \"../StyledComponents/MovieSection/MovieSection\";\r\nimport { MovieSlider } from \"../StyledComponents/MovieSlider/MovieSlider\";\r\n\r\nexport default function MovieSliderItemPoster(props) {\r\n  const [movieState, setMovieState] = useState([]);\r\n\r\n  // Hàm call API\r\n  const fetchNetflixOriginals = () => {\r\n    const promise = Axios({\r\n      url: props.apiUrl,\r\n      method: \"GET\",\r\n    });\r\n    promise\r\n      .then((res) => {\r\n        setMovieState(res.data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Chạy Hàm call api 1 lần duy nhất\r\n    fetchNetflixOriginals();\r\n  }, []);\r\n\r\n  return (\r\n    <MovieSection>\r\n      <h1 className=\"movie_list_heading\">{props.title}</h1>\r\n      <MovieSlider movieData={movieState}>\r\n        {/* Render từng Item trong slider */}\r\n\r\n        {movieState.map((movie, index) => {\r\n          return (\r\n            <div\r\n              onClick={() => {\r\n                props.getMovieData(movie);\r\n              }}\r\n              key={index}\r\n              className=\"movie_item\"\r\n            >\r\n              <img\r\n                alt={movie.name}\r\n                src={`https://image.tmdb.org/t/p/w200${\r\n                  movie.poster_path || movie.poster_path\r\n                }`}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </MovieSlider>\r\n    </MovieSection>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { MovieSection } from \"../StyledComponents/MovieSection/MovieSection\";\r\nimport { MovieSlider } from \"../StyledComponents/MovieSlider/MovieSlider\";\r\n\r\nexport default function MovieSliderItemBackdrop(props) {\r\n  const [movieState, setMovieState] = useState([]);\r\n\r\n  // Hàm call API\r\n  const fetchNetflixOriginals = () => {\r\n    const promise = Axios({\r\n      url: props.apiUrl,\r\n      method: \"GET\",\r\n    });\r\n    promise\r\n      .then((res) => {\r\n        setMovieState(res.data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Chạy Hàm call api 1 lần duy nhất\r\n    fetchNetflixOriginals();\r\n  }, []);\r\n\r\n  return (\r\n    <MovieSection>\r\n      <h1 className=\"movie_list_heading\">{props.title}</h1>\r\n      <MovieSlider poster=\"true\" movieData={movieState}>\r\n        {/* Render từng Item trong slider */}\r\n\r\n        {movieState.map((movie, index) => {\r\n          return (\r\n            <div\r\n              onClick={() => {\r\n                props.getMovieData(movie);\r\n              }}\r\n              key={index}\r\n              className=\"movie_item\"\r\n            >\r\n              <img\r\n                alt={movie.name}\r\n                src={`https://image.tmdb.org/t/p/w500${\r\n                  movie.backdrop_path || movie.poster_path\r\n                }`}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </MovieSlider>\r\n    </MovieSection>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\r\nimport { API_KEY, RESQUESTBACKDROP, RESQUESTPOSTER } from \"../../utils/API\";\r\nimport styled from \"styled-components\";\r\nimport MovieSliderItemPoster from \"../MovieSliderItem/MovieSliderItemPoster\";\r\nimport MovieSliderItemBackdrop from \"../MovieSliderItem/MovieSliderItemBackdrop\";\r\n\r\nexport default function MovieList(props) {\r\n  const [movieData, setMovieData] = useState(\"\");\r\n  const [movieDetail, setMovieDetail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!movieData) return;\r\n    callApiDetailMovie();\r\n  }, [movieData]);\r\n\r\n  // Hàm xử lý thông tin khi click vào movie\r\n  const getMovieData = (data) => {\r\n    if (data.id === movieData.id) {\r\n      setMovieDetail((prevState) => {\r\n        return { ...prevState, isShow: !prevState.isShow };\r\n      });\r\n      return;\r\n    }\r\n\r\n    setMovieData(data);\r\n  };\r\n\r\n  // Hàm call API chi tiết phim để truyền vào modal\r\n  const callApiDetailMovie = () => {\r\n    const promise = Axios({\r\n      url: `https://api.themoviedb.org/3/movie/${movieData.id}/videos?api_key=${API_KEY}`,\r\n      method: \"GET\",\r\n    });\r\n    promise\r\n      .then((res) => {\r\n        // trường hợp API trả về 1 mảng rỗng\r\n        if (res.data.results.length === 0) {\r\n          setMovieDetail({\r\n            name: movieData.name || movieData.title,\r\n            first_air_date: movieData.first_air_date || movieData.release_date,\r\n            vote_average: movieData.vote_average,\r\n            overview: movieData.overview,\r\n            backdrop_path: movieData.backdrop_path,\r\n            idMovie: \"\",\r\n            isShow: true,\r\n          });\r\n          return;\r\n        }\r\n\r\n        // Lọc mảng movie data\r\n        const movieArr = res.data.results;\r\n        const movieFilter = movieArr\r\n          .filter((movie) => movie.site.toUpperCase() === \"YOUTUBE\")\r\n          .filter(\r\n            (movie) =>\r\n              movie.type.toUpperCase() === \"TRAILER\" ||\r\n              movie.type.toUpperCase() === \"TEASER\"\r\n          );\r\n        const index = movieFilter.findIndex(\r\n          (movie) => movie.type.toUpperCase() === \"TRAILER\"\r\n        );\r\n\r\n        // Khi tìm dc video theo yêu cầu là TRAILER\r\n        if (index !== -1) {\r\n          setMovieDetail({\r\n            name: movieData.name || movieData.title,\r\n            first_air_date: movieData.first_air_date || movieData.release_date,\r\n            vote_average: movieData.vote_average,\r\n            overview: movieData.overview,\r\n            backdrop_path: movieData.backdrop_path,\r\n            idMovie: movieFilter[index].key || \"\",\r\n            isShow: true,\r\n          });\r\n          return;\r\n        }\r\n\r\n        // Khi tìm ko dc video là TRAILER theo yêu cầu TRAILER trả về phần tử đầu tiên bởi vì mảng chỉ có teaser và trailer\r\n        setMovieDetail({\r\n          name: movieData.name || movieData.title,\r\n          first_air_date: movieData.first_air_date || movieData.release_date,\r\n          vote_average: movieData.vote_average,\r\n          overview: movieData.overview,\r\n          backdrop_path: movieData.backdrop_path,\r\n          idMovie: movieFilter[0].key || \"\",\r\n          isShow: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n\r\n        // Trường hợp API trả về lỗi 404\r\n        setMovieDetail({\r\n          name: movieData.name || movieData.title,\r\n          first_air_date: movieData.first_air_date || movieData.release_date,\r\n          vote_average: movieData.vote_average,\r\n          overview: movieData.overview,\r\n          backdrop_path: movieData.backdrop_path,\r\n          idMovie: \"\",\r\n          isShow: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Hàm đóng modal movie detail\r\n  const closeModal = () => {\r\n    setMovieDetail((prevState) => {\r\n      return { ...prevState, isShow: !prevState.isShow };\r\n    });\r\n  };\r\n\r\n  // Hàm đóng modal movie detail\r\n  // const closeModalBg = () => {\r\n  //   setMovieDetail((prevState) => {\r\n  //     return { ...prevState, isShow: false };\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <MovieListSection>\r\n      {/* <MovieItemOriginal\r\n        apiUrl={RESQUEST.fetchNetflixOriginals}\r\n        getMovieData={getMovieData}\r\n      /> */}\r\n\r\n      {/* render Slider hình poster */}\r\n      {RESQUESTPOSTER.map((data, index) => {\r\n        return (\r\n          <MovieSliderItemPoster\r\n            title={data.title}\r\n            key={index}\r\n            apiUrl={data.apiUrl}\r\n            getMovieData={getMovieData}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {/* render Slider hình Backdrop  */}\r\n\r\n      {RESQUESTBACKDROP.map((data, index) => {\r\n        return (\r\n          <MovieSliderItemBackdrop\r\n            title={data.title}\r\n            key={index}\r\n            apiUrl={data.apiUrl}\r\n            getMovieData={getMovieData}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {/* <MovieItemTrending\r\n        apiUrl={RESQUEST.fetchTrending}\r\n        getMovieData={getMovieData}\r\n      /> \r\n\r\n      <MovieItemTopRated\r\n        apiUrl={RESQUEST.fetchTopRated}\r\n        getMovieData={getMovieData}\r\n      />\r\n\r\n      <MovieItemAction\r\n        apiUrl={RESQUEST.fetchActionMovies}\r\n        getMovieData={getMovieData}\r\n      />\r\n\r\n      <MovieItemComedy\r\n        apiUrl={RESQUEST.fetchComedyMovies}\r\n        getMovieData={getMovieData}\r\n      />\r\n\r\n      <MovieItemHorror\r\n        apiUrl={RESQUEST.fetchHorrorMovies}\r\n        getMovieData={getMovieData}\r\n      />\r\n\r\n      <MovieItemRomance\r\n        apiUrl={RESQUEST.fetchRomanceMovies}\r\n        getMovieData={getMovieData}\r\n      />\r\n\r\n      <MovieItemDocumentaries\r\n        apiUrl={RESQUEST.fetchDocumentaries}\r\n        getMovieData={getMovieData}\r\n      /> */}\r\n\r\n      <MovieDetail movieDetail={movieDetail} closeModal={closeModal} />\r\n    </MovieListSection>\r\n  );\r\n}\r\n\r\nconst MovieListSection = styled.section`\r\n  padding-bottom: 32px;\r\n`;\r\n","import React from \"react\";\r\nimport useScroll from \"../../hooks/useScroll\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nexport default function NavBar(props) {\r\n  const [scrollY] = useScroll();\r\n\r\n  return (\r\n    <div\r\n      style={\r\n        scrollY > 100\r\n          ? { backgroundColor: \"#000\" }\r\n          : { backgroundColor: \"transparent\" }\r\n      }\r\n      id={styles.navbar}\r\n    >\r\n      <ul>\r\n        <li>\r\n          <a className={styles.navbar_logo} href=\"./\">\r\n            Movie App\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className={styles.navbar_search} href=\"./search\">\r\n            <svg\r\n              className=\"svg-inline--fa fa-search fa-w-16\"\r\n              fill=\"#ccc\"\r\n              aria-hidden=\"true\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"search\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n            </svg>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useScroll() {\r\n  const [scrollY, setScrollY] = useState(0);\r\n\r\n  const handleScrollY = () => {\r\n    const scrollY = window.scrollY || document.documentElement.scrollTop;\r\n\r\n    setScrollY(scrollY);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScrollY);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScrollY);\r\n    };\r\n  }, []);\r\n  return [scrollY];\r\n}\r\n","import React from \"react\";\nimport Banner from \"../../components/Banner/Banner\";\nimport MovieList from \"../../components/MovieList/MovieList\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nfunction Browse() {\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <Banner />\n      <MovieList />\n    </div>\n  );\n}\n\nexport default Browse;\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SearchForm(props) {\r\n  const inputRef = useRef();\r\n\r\n  const clickSearchHandel = (e) => {\r\n    e.preventDefault();\r\n    if (inputRef.current.value.trim() === \"\") {\r\n      alert(\"Vui lòng nhập từ khóa muốn tìm kiếm!\");\r\n      return;\r\n    }\r\n\r\n    props.getSearchKeyWord(inputRef.current.value);\r\n  };\r\n\r\n  const clickResetHandel = (e) => {\r\n    e.preventDefault();\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <SearchSection>\r\n      <form>\r\n        <div className=\"form_group\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            className=\"form_control\"\r\n            placeholder=\"Search...\"\r\n          />\r\n\r\n          <div className=\"search_icon\">\r\n            <svg\r\n              className=\"svg-inline--fa fa-search fa-w-16\"\r\n              fill=\"#ccc\"\r\n              aria-hidden=\"true\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"search\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"btn_section\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={clickSearchHandel}\r\n            className=\"search_btn\"\r\n          >\r\n            Search\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={clickResetHandel}\r\n            className=\"reset_btn\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </SearchSection>\r\n  );\r\n}\r\n\r\nconst SearchSection = styled.section`\r\n  padding: 100px 0;\r\n\r\n  form {\r\n    background-color: #fff;\r\n    width: 500px;\r\n    margin: 0 auto;\r\n\r\n    .form_group {\r\n      background-color: #fff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-evenly;\r\n      gap: 4px;\r\n      padding: 0 12px;\r\n    }\r\n\r\n    .search_icon {\r\n      height: 100%;\r\n      display: flex;\r\n\r\n      svg {\r\n        width: 24px;\r\n      }\r\n    }\r\n\r\n    .form_control {\r\n      padding: 16px 0;\r\n\r\n      display: block;\r\n      border: none;\r\n      width: 100%;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    hr {\r\n      height: 2px;\r\n      background-color: #00bbec;\r\n      border: none;\r\n    }\r\n\r\n    .btn_section {\r\n      display: flex;\r\n      flex-direction: row-reverse;\r\n      gap: 12px;\r\n      padding: 36px 16px;\r\n\r\n      button {\r\n        border: none;\r\n        padding: 12px 16px;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        font-size: 16px;\r\n        cursor: pointer;\r\n        border-radius: 4px;\r\n        transition: all 0.3s linear;\r\n        font-weight: bold;\r\n        opacity: 1;\r\n        transition: all 0.2s ease-in;\r\n\r\n        &:hover {\r\n          opacity: 0.9;\r\n          transform: scale(1.05);\r\n        }\r\n      }\r\n\r\n      .reset_btn {\r\n        background-color: #fff;\r\n        color: #6c6c6c;\r\n      }\r\n\r\n      .search_btn {\r\n        background-color: #00bbec;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function ResultList(props) {\r\n  const renderMovieList = () => {\r\n    if (!props.searchData) return;\r\n\r\n    return props.searchData.map((movie, index) => {\r\n      return (\r\n        <div\r\n          onClick={() => {\r\n            props.getMovieData(movie);\r\n          }}\r\n          key={movie.id}\r\n          className=\"result_item_poster\"\r\n        >\r\n          <img\r\n            alt={movie.name || \"Image\"}\r\n            src={`https://image.tmdb.org/t/p/w200${\r\n              movie.poster_path || movie.backdrop_path\r\n            }`}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <ResultSection>\r\n      <h1>Search Result</h1>\r\n\r\n      {/* Kiểm tra xem có phải mảng rỗng hay ko */}\r\n      {props.searchData.length === 0 && typeof props.searchData === \"object\" ? (\r\n        <p>Không tìm thấy kết quả!!</p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {/* render mảng kết quả tìm dc */}\r\n      <div className=\"result_list_container\">{renderMovieList()}</div>\r\n    </ResultSection>\r\n  );\r\n}\r\n\r\nconst ResultSection = styled.section`\r\n  padding: 0 20px;\r\n  color: #fff;\r\n\r\n  p {\r\n    margin-top: 12px;\r\n    padding-left: 12px;\r\n    color: red;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .result_list_container {\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 200px);\r\n    justify-content: space-between;\r\n    gap: 24px 12px;\r\n    padding: 24px 20px;\r\n    transition: all 0.3s linear;\r\n\r\n    .result_item_poster {\r\n      height: 100%;\r\n      width: 100%;\r\n      cursor: pointer;\r\n      transition: all 0.3s linear;\r\n\r\n      &:hover {\r\n        transform: scale(1.1);\r\n        opacity: 1 !important;\r\n      }\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    &:hover .result_item_poster {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n","import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport MovieDetail from \"../../components/MovieDetail/MovieDetail\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\nimport ResultList from \"../../components/SearchResult/ResultList\";\nimport { API_KEY, API_PREFIX } from \"../../utils/API\";\n\nconst Search = (props) => {\n  const [searchData, setSearchData] = useState(\"\");\n  const [movieData, setMovieData] = useState(\"\");\n  const [movieDetail, setMovieDetail] = useState(\"\");\n\n  useEffect(() => {\n    if (!movieData) return;\n    callApiDetailMovie();\n  }, [movieData]);\n\n  // Hàm lấy key word từ form input và call api\n  const getSearchKeyWord = (data) => {\n    const promise = Axios({\n      url: `${API_PREFIX}/search/movie?api_key=${API_KEY}&language=en-US&query=${data}&page=1`,\n      method: \"GET\",\n    });\n    promise\n      .then((res) => {\n        setSearchData(res.data.results);\n      })\n      .catch((error) => {\n        console.log(\"Search error\", error);\n      });\n  };\n\n  // Hàm xử lý thông tin khi click vào movie\n  const getMovieData = (data) => {\n    if (data.id === movieData.id) {\n      setMovieDetail((prevState) => {\n        return { ...prevState, isShow: !prevState.isShow };\n      });\n    }\n\n    setMovieData(data);\n  };\n\n  // Hàm call API chi tiết phim để truyền vào modal\n  const callApiDetailMovie = () => {\n    const promise = Axios({\n      url: `https://api.themoviedb.org/3/movie/${movieData.id}/videos?api_key=${API_KEY}`,\n      method: \"GET\",\n    });\n    promise\n      .then((res) => {\n        // trường hợp API trả về 1 mảng rỗng\n        if (res.data.results.length === 0) {\n          setMovieDetail({\n            name: movieData.name || movieData.title,\n            first_air_date: movieData.first_air_date || movieData.release_date,\n            vote_average: movieData.vote_average,\n            overview: movieData.overview,\n            backdrop_path: movieData.backdrop_path,\n            idMovie: \"\",\n            isShow: true,\n          });\n          return;\n        }\n\n        // Lọc mảng movie data\n        const movieArr = res.data.results;\n        const movieFilter = movieArr\n          .filter((movie) => movie.site.toUpperCase() === \"YOUTUBE\")\n          .filter(\n            (movie) =>\n              movie.type.toUpperCase() === \"TRAILER\" ||\n              movie.type.toUpperCase() === \"TEASER\"\n          );\n        const index = movieFilter.findIndex(\n          (movie) => movie.type.toUpperCase() === \"TRAILER\"\n        );\n\n        // Khi tìm dc video theo yêu cầu là TRAILER\n        if (index !== -1) {\n          setMovieDetail({\n            name: movieData.name || movieData.title,\n            first_air_date: movieData.first_air_date || movieData.release_date,\n            vote_average: movieData.vote_average,\n            overview: movieData.overview,\n            backdrop_path: movieData.backdrop_path,\n            idMovie: movieFilter[index].key || \"\",\n            isShow: true,\n          });\n          return;\n        }\n\n        // Khi tìm ko dc video là TRAILER theo yêu cầu TRAILER trả về phần tử đầu tiên bởi vì mảng chỉ có teaser và trailer\n        setMovieDetail({\n          name: movieData.name || movieData.title,\n          first_air_date: movieData.first_air_date || movieData.release_date,\n          vote_average: movieData.vote_average,\n          overview: movieData.overview,\n          backdrop_path: movieData.backdrop_path,\n          idMovie: movieFilter[0].key || \"\",\n          isShow: true,\n        });\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n\n        // Trường hợp API trả về lỗi 404\n        setMovieDetail({\n          name: movieData.name || movieData.title,\n          first_air_date: movieData.first_air_date || movieData.release_date,\n          vote_average: movieData.vote_average,\n          overview: movieData.overview,\n          backdrop_path: movieData.backdrop_path,\n          idMovie: \"\",\n          isShow: true,\n        });\n      });\n  };\n\n  // Hàm đóng modal movie detail\n  const closeModal = () => {\n    setMovieDetail((prevState) => {\n      return { ...prevState, isShow: !prevState.isShow };\n    });\n  };\n\n  return (\n    <div className=\"app bg_height\">\n      <NavBar />\n      <SearchForm getSearchKeyWord={getSearchKeyWord} />\n      <ResultList getMovieData={getMovieData} searchData={searchData} />\n      <MovieDetail movieDetail={movieDetail} closeModal={closeModal} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Browse />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // {/* </React.StrictMode> */}\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}